#version 460

#extension GL_EXT_mesh_shader : require

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
layout(max_vertices = 64, max_primitives = 126) out;
layout(triangles) out;

layout(location = 0) out VetexOut{
	vec3 viewVertexPosition;
	vec3 normal;
	vec2 uv;
	uint modelIndex;
} vOut[];

struct ModelData {
    mat4 modelMat;
	mat4 viewNormalMatrix;
    vec3 modelOffset;
};

struct Meshlet {
	uint vertCount;
    uint vertOffset;
    uint primCount;
    uint primOffset;
};

struct Vertex {
    vec3 position;
    vec3 normal;
    vec2 uv;
};

layout(push_constant) uniform ModelInfo {
    uint index;
    uint meshletOffset;
} modelInfo;

layout(binding = 0) readonly buffer VertexData {
	Vertex vertices[];
} vertexData;

layout(binding = 1) readonly buffer VertexIndexData {
	uint vertexIndices[];
} vertexIndexData;

layout(binding = 2) readonly buffer PrimitiveIndexData {
	uint primIndices[];
} primIndexData;

layout(binding = 3) readonly buffer MeshletData {
	Meshlet meshlets[];
} meshletData;

layout(binding = 4) uniform CameraMatrices {
	mat4 view;
	mat4 projection;
} camera;

layout(binding = 5) readonly buffer Modeldata {
	ModelData models[];
} modelData;

void main() {
	SetMeshOutputsEXT(3, 1);

	gl_MeshVerticesEXT[0].gl_Position = vec4(1.0);
	gl_PrimitiveTriangleIndicesEXT[0] = uvec3(1);
}
